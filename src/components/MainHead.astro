---
import config from "~/lib/config.js";
import { getImage } from "astro:assets";
import avatar from "~/assets/avatar.jpg";
import background from "~/assets/bg.jpg";
import ogImage from "~/assets/og-image.jpg";
const optimizedAvatar = await getImage({ src: avatar, format: "webp" });
const optimizedBackground = await getImage({
  src: background,
  format: "webp",
  quality: 60,
});
const optimizedOgImage = await getImage({ src: ogImage, format: "webp" });

interface Props {
  title?: string | undefined;
  description?: string | undefined;
}
const { title = config.siteTitle, description = config.bio } = Astro.props;
---

<meta charset="UTF-8" />

<title>{title}</title>
<meta name="description" content={description} />
<meta name="viewport" content="width=device-width" />
<meta name="theme-color" content="#283226" />
<meta name="generator" content={Astro.generator} />
<link rel="icon" type="image/x-icon" href="/favicon.ico" />
<link rel="canonical" href="https://gregrickaby.com" />

<link rel="preload" as="image" href={optimizedAvatar.src} type="image/webp" />
<link
  rel="preload"
  as="image"
  href={optimizedBackground.src}
  type="image/webp"
/>
<link
  rel="preload"
  as="font"
  href="/fonts/playfair-display-700.woff2"
  type="font/woff2"
  crossorigin
/>
<link
  rel="preload"
  as="font"
  href="/fonts/lato-400.woff2"
  type="font/woff2"
  crossorigin
/>
<link rel="preconnect" href="https://static.cloudflareinsights.com" />

<meta property="og:type" content="website" />
<meta property="og:url" content={config.siteUrl} />
<meta property="og:title" content={config.siteTitle} />
<meta property="og:description" content={config.metaDescription} />
<meta property="og:image" content={optimizedOgImage.src} />
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={config.siteUrl} />
<meta property="twitter:title" content={config.siteTitle} />
<meta property="twitter:description" content={config.metaDescription} />
<meta property="twitter:image" content={optimizedOgImage.src} />
<script
  type="application/ld+json"
  set:html={JSON.stringify({
    "@context": "https://schema.org",
    "@type": "Person",
    name: config.name,
    jobTitle: config.jobTitle,
    url: config.siteUrl,
    sameAs: config.socialLinks.map((link) => link.url),
  })}
></script>
