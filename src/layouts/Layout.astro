---
import config from '../lib/config.js'
import { getImage } from 'astro:assets'
import avatar from '../assets/avatar.jpg'
import background from '../assets/bg.jpg'
import ogImage from '../assets/og-image.jpg'
const optimizedAvatar = await getImage({ src: avatar, format: 'avif' })
const optimizedBackground = await getImage({ src: background, format: 'avif' })
const optimizedOgImage = await getImage({ src: ogImage, format: 'avif' })

interface Props {
    title: string
    description: string
}

const { title, description } = Astro.props
---

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <title>{title}</title>
        <meta name="description" content={description} />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" type="image/x-icon" href="/favicon.ico" />
        <link rel="canonical" href="https://gregrickaby.com" />
        <link
            rel="preload"
            as="image"
            href={optimizedAvatar.src}
            type="image/avif"
        />
        <link
            rel="preload"
            as="image"
            href={optimizedBackground.src}
            type="image/avif"
        />
        <meta name="robots" content="index, follow" />
        <meta name="generator" content={Astro.generator} />
        <meta property="og:type" content="website" />
        <meta property="og:url" content={config.siteUrl} />
        <meta property="og:title" content={config.siteTitle} />
        <meta property="og:description" content={config.metaDescription} />
        <meta property="og:image" content={optimizedOgImage.src} />
        <meta property="twitter:card" content="summary_large_image" />
        <meta property="twitter:url" content={config.siteUrl} />
        <meta property="twitter:title" content={config.siteTitle} />
        <meta property="twitter:description" content={config.metaDescription} />
        <meta property="twitter:image" content={optimizedOgImage.src} />
        <script
            type="application/ld+json"
            set:html={JSON.stringify({
                '@context': 'https://schema.org',
                '@type': 'Person',
                name: config.name,
                jobTitle: config.jobTitle,
                url: config.siteUrl,
                sameAs: config.socialLinks.map((link) => link.url),
            })}
        ></script>
    </head>
    <body style={`background-image: url(${optimizedBackground.src});`}>
        <slot />
        <div class="overlay"></div>
        <style is:global>
            :root {
                --font-sans: sans-serif;
                --font-serif: serif;

                --white: rgb(255, 255, 255);
                --black: rgb(0, 0, 0);
                --primary: rgb(40, 50, 38);
                --primary-hover: rgb(10, 25, 20);
                --secondary: rgb(219, 185, 167);
                --secondary-hover: rgb(200, 160, 140);
                --tertiary: rgb(118, 53, 53);
                --tertiary-hover: rgb(100, 40, 40);
                --overlay: rgba(0, 0, 0, 0.2);

                --shadow: 1px 1px 2px var(--overlay);
            }

            html {
                -webkit-font-smoothing: antialiased;
                -webkit-overflow-scrolling: touch;
                scroll-behavior: smooth;
            }

            body {
                background: no-repeat center center/cover;
                color: var(--primary);
                font-family: var(--font-sans);
                font-size: 1.25rem;
                height: 100vh;
                line-height: 1.5;
                padding: 2rem;
            }

            main {
                align-items: center;
                display: flex;
                flex-direction: column;
                gap: 1rem;
                justify-content: center;
                margin: 0 auto;
                max-width: 390px;
                text-align: center;
            }

            h1 {
                color: var(--white);
                font-family: var(--font-serif);
                font-size: 4rem;
                font-weight: 700;
                margin: 0;
                line-height: normal;
                text-shadow: var(--shadow);
            }

            a {
                color: var(--primary);
                text-decoration: none;
            }

            p {
                color: var(--white);
                text-shadow: var(--shadow);
            }

            .overlay {
                background-color: var(--overlay);
                height: 100vh;
                left: 0;
                position: fixed;
                top: 0;
                width: 100vw;
                z-index: -1;
            }
        </style>
    </body>
</html>
